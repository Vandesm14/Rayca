{"mappings":"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","sources":["src/script.ts","src/something.ts"],"sourcesContent":["import { Something } from './something';\n\nconst SEED = 1337 & 0xdeadbeef;\n// NOTE: uses mulberry32 seeded random\nconst RAND =\n  (seed: number): (() => number) =>\n  () => {\n    let t = (seed += 0x6d2b79f5);\n    t ^= t + Math.imul(t ^ (t >>> 7), t | 61);\n    return ((t ^ (t >>> 14)) >>> 0) / 4294967296;\n  };\nconst ST = new Something(10, 10, [' ', '-', '='], RAND(SEED));\n\nfunction html(data: number[]): HTMLElement {\n  const inner = document.createElement('code');\n  inner.innerHTML = ST.toString(data)\n    .replace(/ /g, '&nbsp;')\n    .replace(/\\n/g, '<br>');\n  return inner;\n}\n\nconst artList = document.createElement('div');\nartList.classList.add('list');\ndocument.getElementById('our-art').appendChild(artList);\n\nfunction card(data: number[], omitCta = false) {\n  const card = document.createElement('div');\n  card.setAttribute('aria-label', 'art');\n  card.classList.add('card');\n\n  const ascii = html(data);\n  ascii.tabIndex = 0;\n  if (!omitCta) {\n    const openModal = () => {\n      const modalWrapper = document.getElementById('modal-wrapper');\n      const modalContent = document.getElementById('modal-content');\n      modalWrapper.classList.add('active');\n      modalContent.innerHTML = card.outerHTML.replace(cta.outerHTML, '');\n      history.pushState(null, null, '?token=' + ST.toToken(ST.compress(data)));\n    };\n    ascii.addEventListener('click', openModal);\n    ascii.addEventListener(\"keydown\", (e) => e.key === \"Enter\" ? openModal() : void(0));\n  }\n\n  const number = document.createElement('span');\n  number.innerHTML = `#${data\n    .map((el, i) => String(el + i).slice(-1))\n    .slice(0, 8)\n    .join('')}`;\n\n  const cta = document.createElement('a');\n  cta.href = '?token=' + ST.toToken(ST.compress(data));\n  cta.innerText = 'Own a copy';\n  cta.addEventListener('click', (e) => {\n    e.preventDefault();\n    navigator.clipboard.writeText(cta.href);\n\n    const originalInnerText = cta.innerText;\n    cta.innerText = 'Copied!';\n    setTimeout(() => (cta.innerText = originalInnerText), 2000);\n  });\n\n  card.appendChild(ascii);\n  card.appendChild(number);\n  !omitCta && card.appendChild(cta);\n\n  return card;\n}\n\nconst INF_SCROLL_OFF = 400;\nconst CARDS_TO_INSERT = 16;\n\nfunction maybeModal() {\n  const queryToken = new URLSearchParams(location.search).get('token');\n  const modal = document.getElementById('modal-content');\n  const modalWrapper = document.getElementById('modal-wrapper');\n\n  if (queryToken) {\n    const cardFromUrl = card(ST.decompress(ST.fromToken(queryToken)), true);\n    modal.innerHTML = cardFromUrl.outerHTML;\n    modalWrapper.classList.add('active');\n  } else {\n    modalWrapper.classList.remove('active');\n  }\n}\n\nfunction nextCards() {\n  for (let i = 0; i < CARDS_TO_INSERT; i++) {\n    artList.appendChild(card(ST.generate()));\n  }\n}\n\nnextCards();\nmaybeModal();\n\ndocument.addEventListener(\n  'scroll',\n  () => {\n    const { scrollTop, scrollHeight, clientHeight } = document.documentElement;\n    if (scrollTop + clientHeight >= scrollHeight - INF_SCROLL_OFF) {\n      nextCards();\n    }\n  },\n  {\n    passive: true,\n  }\n);\n\ndocument.getElementById('modal-close').addEventListener('click', () => {\n  document.getElementById('modal-wrapper').classList.remove('active');\n  history.pushState(null, null, '/');\n});\n\ndocument.getElementById('modal-wrapper').addEventListener('click', (e) => {\n  if (e.target === e.currentTarget) {\n    document.getElementById('modal-wrapper').classList.remove('active');\n    history.pushState(null, null, '/');\n  }\n});\n\nwindow.addEventListener('popstate', maybeModal);\n","export class Something {\n  #BYTE = 8;\n\n  width: number;\n  height: number;\n  chars: string[];\n  rand: () => number;\n\n  constructor(\n    width: number,\n    height: number,\n    chars: string[],\n    rand: () => number\n  ) {\n    this.width = width;\n    this.height = height;\n    this.chars = chars;\n    this.rand = rand;\n  }\n\n  #bitsNeeded(n: number, max: number): number | undefined {\n    for (let i = 0; i < max; i++) {\n      if (Math.pow(2, i) - 1 >= n) return i;\n    }\n  }\n\n  #bitMask(n: number): number {\n    return Array.from<number>({ length: n }).reduce(\n      (a, _, i) => a | (1 << i),\n      0\n    );\n  }\n\n  /** Generates new data. */\n  generate() {\n    return Array.from({ length: this.width * this.height }).map(() =>\n      Math.floor(this.rand() * this.chars.length)\n    );\n  }\n\n  /** Compresses data. */\n  compress(data: number[]): number[] | undefined {\n    const bitsPerChar = this.#bitsNeeded(this.chars.length - 1, this.#BYTE);\n    if (bitsPerChar === undefined) return;\n\n    const charsPerByte = Math.floor(this.#BYTE / bitsPerChar);\n    const length = Math.ceil(data.length / charsPerByte);\n\n    return Array.from({ length }).map((_, i) => {\n      return Array.from({ length: charsPerByte })\n        .map((_, j) => (data[j + i * charsPerByte] ?? 0) << (bitsPerChar * j))\n        .reduce((p, c) => p | c);\n    });\n  }\n\n  /** Decompresses data. */\n  decompress(data: number[]): number[] | undefined {\n    const bitsPerChar = this.#bitsNeeded(this.chars.length - 1, this.#BYTE);\n    if (bitsPerChar === undefined) return;\n\n    const charsPerByte = Math.floor(this.#BYTE / bitsPerChar);\n    const length = this.width * this.height;\n    const charBitsMask = this.#bitMask(bitsPerChar);\n\n    return Array.from({ length })\n      .reverse()\n      .map((_, i) => {\n        const offset = bitsPerChar * (i % charsPerByte);\n        return (\n          (data[Math.floor(i / charsPerByte)] & (charBitsMask << offset)) >>\n          offset\n        );\n      });\n  }\n\n  /** Converts data into its string form. */\n  toString(data: number[]): string {\n    return Array.from<string>({ length: data.length }).reduce(\n      (a, _, i) =>\n        a + (i % this.width === 0 && i !== 0 ? '\\n' : '') + this.chars[data[i]],\n      ''\n    );\n  }\n\n  /** Converts data from its string form. */\n  fromString(data: string): number[] {\n    return Array.from<number[]>({ length: data.length }).reduce(\n      (a, _, i) =>\n        data.charAt(i) !== '\\n'\n          ? [...a, this.chars.indexOf(data.charAt(i))]\n          : a,\n      []\n    );\n  }\n\n  /** Converts data into its token form. */\n  toToken(data: number[]): string {\n    return btoa(String.fromCharCode(...data));\n  }\n\n  /** Converts data from its token form. */\n  fromToken(data: string): number[] {\n    return atob(data)\n      .split('')\n      .map((c) => c.charCodeAt(0));\n  }\n}\n"],"names":["$0f592d681121713f$var$ST","BYTE","width","height","chars","rand","this","bitsNeeded","n","max","i","Math","pow","bitMask","n1","Array","from","length","reduce","a","_","generate","map","floor","compress","data","bitsPerChar","undefined","charsPerByte","ceil","j","p","c","decompress","charBitsMask","reverse","offset","toString","fromString","charAt","indexOf","toToken","btoa","String","fromCharCode","fromToken","atob","split","charCodeAt","seed","t","imul","$0f592d681121713f$var$artList","document","createElement","$0f592d681121713f$var$card","omitCta","card","setAttribute","classList","add","ascii","inner","innerHTML","replace","$0f592d681121713f$var$html","tabIndex","openModal","modalWrapper","getElementById","modalContent","outerHTML","cta","history","pushState","addEventListener","e","key","number","el","slice","join","href","innerText","preventDefault","navigator","clipboard","writeText","originalInnerText","setTimeout","appendChild","$0f592d681121713f$var$maybeModal","queryToken","URLSearchParams","location","search","get","modal","cardFromUrl","remove","$0f592d681121713f$var$nextCards","scrollTop","scrollHeight","clientHeight","documentElement","passive","target","currentTarget","window"],"version":3,"file":"index.752af355.js.map"}